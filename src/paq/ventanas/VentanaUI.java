package paq.ventanas;


import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.sql.*;
import java.util.logging.Level;
import java.util.logging.Logger;
import paq.clases.ConexionSQL;
import paq.clases.SentenciaDML;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author SEBASTIAN
 */
public class VentanaUI extends javax.swing.JFrame {

    /**
     * Creates new form Ventana2
     */
    private Connection conexionSQL;
    private DefaultTableModel model;
    
   public VentanaUI(Connection c) {
        this.conexionSQL = c;
        initComponents();
        this.setLocationRelativeTo(null);

        // Configuración de columnas al inicio
        model = new DefaultTableModel();
   }
    


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jButton2 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaDatos = new javax.swing.JTable();
        jButton3 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        comboBoxTablas = new javax.swing.JComboBox();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("V");

        jButton2.setFont(new java.awt.Font("Yu Gothic UI Semilight", 0, 24)); // NOI18N
        jButton2.setText("Agregar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        tablaDatos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Atributos"
            }
        ));
        jScrollPane1.setViewportView(tablaDatos);

        jButton3.setFont(new java.awt.Font("Yu Gothic UI Semilight", 0, 24)); // NOI18N
        jButton3.setText("Salir");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tw Cen MT Condensed", 2, 80)); // NOI18N
        jLabel1.setText("SAAS");

        comboBoxTablas.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "-", "Cita", "Cliente", "Historia", "Instrumento", "Mascota", "Producto", "Proveedor", "Recepcionista", "Transacción", "Veterinario", " " }));
        comboBoxTablas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboBoxTablasActionPerformed(evt);
            }
        });

        jButton1.setText("actualizarButton");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(72, 72, 72)
                .addComponent(comboBoxTablas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(46, 46, 46)
                .addComponent(jButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 226, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(364, 364, 364))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(198, 198, 198)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 636, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(64, 64, 64))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(37, 37, 37)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(comboBoxTablas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton1))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 349, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 64, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(44, 44, 44))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
  
       
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_jButton3ActionPerformed

    private void comboBoxTablasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboBoxTablasActionPerformed
//        // Lógica para la lista desplegable
//        int selectedIndex = comboBoxTablas.getSelectedIndex();
//
//        // Limpiar la tabla antes de actualizar
//        model.setRowCount(0);
//
//        switch (selectedIndex) {
//            case 0:
//                //model.setColumnIdentifiers(new Object[]{"ID_Cita", "Motivo"});
//                // Lógica para agregar filas a la tabla de la tabla "Cita"
//                break;
//            case 1:
//                //model.setColumnIdentifiers(new Object[]{"ID_Cliente", "Nombre"});
//                // Lógica para agregar filas a la tabla de la tabla "Cliente"
//                break;
//            case 2:
//                //model.setColumnIdentifiers(new Object[]{"ID_Mascota", "Raza"});
//                // Lógica para agregar filas a la tabla de la tabla "Mascota"
//                break;
//            // Agrega más casos según sea necesario para otras tablas
//        }
    }//GEN-LAST:event_comboBoxTablasActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        try {
            // Lógica para el botón "Actualizar"
            DefaultTableModel modelo = (DefaultTableModel) tablaDatos.getModel();
            modelo.setColumnCount(0); // Elimina todas las columnas existentes
            modelo.setRowCount(0);    // Elimina todas las filas existentes
            actualizarTabla();
        } catch (SQLException ex) {
            Logger.getLogger(VentanaUI.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    
    private void actualizarTabla() throws SQLException {
        // Lógica para actualizar la tabla según la opción seleccionada
        String tablaSeleccionada = (String) comboBoxTablas.getSelectedItem(); if (tablaSeleccionada.equalsIgnoreCase("-")) tablaSeleccionada = null;
        DefaultTableModel modelo = new DefaultTableModel();

        String[] atributos = null;
        if (null != tablaSeleccionada) 
            
            switch (tablaSeleccionada) {
            case "Cita":
                tablaSeleccionada = "Cita";
                break;
            case "Cliente":
                tablaSeleccionada = "Cliente";
                break;
            case "Historia":
                tablaSeleccionada = "HistoriaClinica";
                break;
            case "Instrumento":
                tablaSeleccionada = "InstrumentoMedico";
                break;
            case "Mascota":
                tablaSeleccionada = "Mascota";
                break;
            case "Producto":
                tablaSeleccionada = "Producto";
                break;
            case "Proveedor":
                tablaSeleccionada = "Proveedor";
                break;
            case "Recepcionista":
                tablaSeleccionada = "Recepcionista";
                break;
            case "Transacción":
                tablaSeleccionada = "Transaccion";
                break;
            case "Veterinario":
                tablaSeleccionada = "Veterinario";
                break;
            default:
                break;
        }
        
        // Poner encabezado
        Statement statement = conexionSQL.createStatement();
        ResultSet resultSet = statement.executeQuery(SentenciaDML.SELECT_TODO_TABLA + tablaSeleccionada);
//        ResultSet resultSet = statement.executeQuery("select * from Cita inner join Cliente on cita.id_cliente = cliente.dni_cliente where cliente.nombres like '%a'");
        
        ResultSetMetaData metaData = resultSet.getMetaData();
        int numColumnas = metaData.getColumnCount();
        atributos = new String[numColumnas];
        
        for (int i = 1; i <= numColumnas; i++) {
            atributos[i-1] = metaData.getColumnName(i);
        }
        modelo.setColumnIdentifiers(atributos);
        
        // Llenar tabla con información
        while (resultSet.next()) {
            String[] info = new String[atributos.length];
            for (int i = 0; i < atributos.length; i++) {
                info[i] = resultSet.getString(atributos[i]);
            }
            modelo.addRow(info);
        }   

        // Cerrar resultSet y sentencia
        resultSet.close();
        statement.close();
        
        // Colocar modelo creado
        tablaDatos.setModel(modelo);
    }
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JComboBox comboBoxTablas;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tablaDatos;
    // End of variables declaration//GEN-END:variables
}
